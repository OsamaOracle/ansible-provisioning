version: '3.7'
services:
  rabbit:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=hume
      - RABBITMQ_DEFAULT_PASS=hume!rabbit2013
  postgres:
    image: postgres:12.0
    restart: always
    environment:
      POSTGRES_PASSWORD: password123
      POSTGRES_USER: hume
    ports:
      - 5432:5432
    volumes:
      # Volume for the postgres database
      - /docker/postgres/data:/var/lib/postgresql/data
  blobstore:
    # minio is only necessary if you don't want to use S3 buckets and keep the data on a local server while taking advantage of an AWS client
    image: docker..com/internal/hume-blobstorage:1.17.2-RELEASE
    restart: always
    environment:
      - MINIO_ACCESS_KEY=hume
      - MINIO_SECRET_KEY=hume111222333
    volumes:
      # Mount a local volume on disk against the /data volume of the minio container
      - /docker/minio/data:/data
    command: "server /data"
    ports:
      - 9000:9000
  textrank_service:
    image: docker..com/internal/textrank-service:{{hume_cloud_textrank_service_tag}}
    environment:
      - SERVER_PORT=8086
      - EUREKA_URI=http://{{ansible_host}}:8761/eureka
      - HUME_CLOUD_ENABLED=true
      - server.tomcat.max-connections=100
      - "JAVA_OPTS=-Xmx2g -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
  stanfordnlp_service:
    image: docker..com/internal/annotation-service:3.0.0-SNAPSHOT
    environment:
      - "JAVA_OPTS=-Xmx5g -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
      - "hume.store.remote=true"
      - "hume.config.store.host=http//blobstore:9000"
      - hume.config.store.access.key={{kg_hume_cloud_web_minio_access_key}}
      - hume.config.store.access.secret={{kg_hume_cloud_web_minio_access_secret}}
      - SERVER_PORT=8096
      - EUREKA_URI=http://{{ansible_host}}:8761/eureka
      - HUME_CLOUD_ENABLED=true
      - server.tomcat.max-connections=2
      - "spring.application.name=stanfordnlp-service"
      - SECURITY_SIGNUP_ENABLED=false
  eureka:
    image: docker..com/internal/hume-cloud-discovery:1.17.2-RELEASE
    ports:
      - "8761:8761"
    environment:
      - EUREKA_INSTANCE_HOSTNAME=localhost
      - EUREKA_INSTANCE_PREFER-IP-ADDRESS=true
  gateway:
    image: docker..com/internal/hume-cloud-gateway:1.17.2-RELEASE
    ports:
      - "10000:10000"
    depends_on:
      - annotation_service
  annotation_service:
    image: docker..com/internal/annotation-service:2.2.1
    environment:
      - SERVER_PORT=8085
      - EUREKA_URI=http://eureka:8761/eureka
      - HUME_CLOUD_ENABLED=true
    volumes:
      - /docker/dzd/models:/data
      - /docker/dzd/bootstrap:/bootstrap
    ports:
      - "8085:8085"
  # If you do a Labs only installation, Neo4j is not needed.
  neo4j:
    image: neo4j:4.0.0-enterprise
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_AUTH=neo4j/{{hume_cloud_web_neo4j_password}}
      - NEO4J_dbms_memory_heap_maxSize=4G
      - NEO4J_dbms_connector_bolt_advertised__address={{ansible_host}}:7687
      - NEO4JLABS_PLUGINS=["apoc"]
    volumes:
      - /minio/neo4j4/data/neo4j-data:/data
      - /minio/neo4j4/plugins:/plugins
  orchestra:
    image: docker..com/public/hume-orchestra:2.2.1
    ports:
      - 8100:8100
    volumes:
      - /docker/minio/data:/data
    environment:
      - "JAVA_OPTS=-Xmx4g -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    restart: always
  api:
    image: docker..com/public/hume-api:2.2.1
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/hume
      - SPRING_DATASOURCE_USERNAME=hume
      - SPRING_DATASOURCE_PASSWORD=password123
      - NEO4J_HOST=neo4j
      - NEO4J_PASSWORD=pass
      - HUME_NLP_ENGINE_ENABLED=true
      - HUME_GATEWAY_URI=http://gateway:10000
      - HUME_BLOBSTORE_ADAPTER=minio
      - HUME_BLOBSTORE_ADAPTER_S3_IDENTITY=hume
      - HUME_BLOBSTORE_ADAPTER_S3_CREDENTIAL=hume111222333
      - "HUME_BLOBSTORE_ADAPTER_S3_HOST=http://blobstore:9000"
      - HUME_BLOBSTORE_CONTAINER=hume-bucket
      - HUME_KG_NLP_HOST=http://annotation_service:8085
      - HUME_KG_NLP_ENABLED=true
      - hume.orchestra.uri=http://orchestra:8100
      - SECURITY_SIGNUP_ENABLED=false
  web:
    image: docker..com/public/hume-web:2.2.1
    environment:
      - HUME_API_URL=http://{{ansible_host}}:8080
    ports:
      - "8081:80"

networks:
  default:
    external:
      name: reverse_proxy